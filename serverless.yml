service: webshop-backend

package:
  individually: true
  exclude:
#    - "**/*"  # quotes(") are needed
    - 'venv/**'
    - '.serverless/**'
    - '.idea/**'
    - 'node_modules/**'
    - 'package-lock.json'
    - '.gitlab-ci.yml'
    - '.gitignore'
    - 'src/**'
  include:
    - src/persistence/**
    - src/functions/helper/**

#  patterns:
#    - '!venv/**'
#    - '!.serverless/**'
#    - '!.node_modules/**'
#    - '!package-lock.json'
#    - '!.gitlab-ci.yml'
#    - '!.gitignore'
#    - 'src/**'

custom:
  productsTableName: 'webshop-products-${self:provider.stage}'
  ordersTableName: 'webshop-orders-${self:provider.stage}'
  accountId: !Ref AWS::AccountId
#  pythonRequirements:
#    dockerizePip: non-linux

plugins:
  - serverless-offline
#  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.8
  environment:
    PRODUCTS_TABLE: ${self:custom.productsTableName}
    ORDERS_TABLE: ${self:custom.ordersTableName}
    REGION: ${self:provider.region}
    STAGE: ${self:provider.stage}
    SERVICE: ${self:service}
    ACCOUNT_ID: ${self:custom.accountId}
    PAYMENT_API: 'https://c4.ebke.hmcloudlabs.de/payment'
    PAYMENT_API_KEY: 'YfPE0IdT0HL0'

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PRODUCTS_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.ORDERS_TABLE}"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      #TODO: CHANGE
      Resource: "*"

functions:
  create-product:
    handler: src/functions/product/create_product.create_product
    events:
      - http:
          path: api/products
          method: post
          cors: true
    package:
      include:
        - src/functions/product/create_product.py

  list-products:
    handler: src/functions/product/list_products.list_products
    events:
      - http:
          path: api/products
          method: get
          cors: true
    package:
      include:
        - src/functions/product/list_products.py

  get-product:
    handler: src/functions/product/get_product.get_product
    events:
      - http:
          path: api/products/{id}
          method: get
          cors: true
    package:
      include:
        - src/functions/product/get_product.py

  delete-product:
    handler: src/functions/product/delete_product.delete_product
    events:
      - http:
          path: api/products/{id}
          method: delete
          cors: true
    package:
      include:
        - src/functions/product/delete_product.py

  create-order:
    handler: src/functions/order/create_order.create_order
    events:
      - http:
          path: api/orders
          method: post
          cors: true
    package:
      include:
        - src/functions/order/create_order.py

  list-orders:
    handler: src/functions/order/list_orders.list_orders
    events:
      - http:
          path: api/orders
          method: get
          cors: true
    package:
      include:
        - src/functions/order/list_orders.py

  get-order:
    handler: src/functions/order/get_order.get_order
    events:
      - http:
          path: api/orders/{id}
          method: get
          cors: true
    package:
      include:
        - src/functions/order/get_order.py

  delete-order:
    handler: src/functions/order/delete_order.delete_order
    events:
      - http:
          path: api/orders/{id}
          method: delete
          cors: true
    package:
      include:
        - src/functions/order/delete_order.py

  payment:
    handler: src/functions/order/payment.payment
    package:
      include:
        - src/functions/order/payment.py

  get_invoice:
    handler: src/functions/order/get_invoice.get_invoice
    events:
      - http:
          path: api/orders/invoice/{id}
          method: get
          cors: true
    package:
      include:
        - src/functions/order/get_invoice.py


resources:
  Resources:
    ProductsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PRODUCTS_TABLE}
    OrdersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.ORDERS_TABLE}
